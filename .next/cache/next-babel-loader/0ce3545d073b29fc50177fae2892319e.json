{"ast":null,"code":"import _defineProperty from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _useState = useState(initial),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var intialValue = Object.values(initial).join('');\n  useEffect(function () {\n    setInputs(initial);\n  }, [intialValue]);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      var _e$target$files = _slicedToArray(e.target.files, 1);\n\n      value = _e$target$files[0];\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, _defineProperty({}, name, value)));\n  }\n\n  function resetForm() {\n    setInputs(initial);\n  }\n\n  function clearForm() {\n    var blankState = Object.fromEntries(Object.entries(inputs).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return [key, ''];\n    }));\n    setInputs(blankState);\n  } // return the things we want to surface from this custom hook\n\n\n  return {\n    inputs: inputs,\n    handleChange: handleChange,\n    resetForm: resetForm,\n    clearForm: clearForm\n  };\n}\n\n_s(useForm, \"Ojj4hh6HHOsjtwWnkUaVb5V0o3U=\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/lib/useForm.js"],"names":["useState","useEffect","useForm","initial","inputs","setInputs","intialValue","Object","values","join","handleChange","e","target","value","name","type","parseInt","files","resetForm","clearForm","blankState","fromEntries","entries","map","key"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AAEA,eAAe,SAASC,OAAT,GAA+B;AAAA;;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAAA,kBACdH,QAAQ,CAACG,OAAD,CADM;AAAA,MACnCC,MADmC;AAAA,MAC3BC,SAD2B;;AAE1C,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,EAA5B,CAApB;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH,GAFQ,EAEN,CAACG,WAAD,CAFM,CAAT;;AAIA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AAAA,oBACOA,CAAC,CAACC,MADT;AAAA,QACfC,KADe,aACfA,KADe;AAAA,QACRC,IADQ,aACRA,IADQ;AAAA,QACFC,IADE,aACFA,IADE;;AAErB,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACnBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACH;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AAAA,2CACPJ,CAAC,CAACC,MAAF,CAASK,KADF;;AAChBJ,MAAAA,KADgB;AAEpB;;AACDR,IAAAA,SAAS,iCAEFD,MAFE,2BAGJU,IAHI,EAGGD,KAHH,GAAT;AAKH;;AAED,WAASK,SAAT,GAAqB;AACjBb,IAAAA,SAAS,CAACF,OAAD,CAAT;AACH;;AAED,WAASgB,SAAT,GAAqB;AACjB,QAAMC,UAAU,GAAGb,MAAM,CAACc,WAAP,CACfd,MAAM,CAACe,OAAP,CAAelB,MAAf,EAAuBmB,GAAvB,CAA2B;AAAA;AAAA,UAAEC,GAAF;AAAA,UAAOX,KAAP;;AAAA,aAAkB,CAACW,GAAD,EAAM,EAAN,CAAlB;AAAA,KAA3B,CADe,CAAnB;AAGAnB,IAAAA,SAAS,CAACe,UAAD,CAAT;AACH,GAhCyC,CAkC1C;;;AACA,SAAO;AACHhB,IAAAA,MAAM,EAANA,MADG;AAEHM,IAAAA,YAAY,EAAZA,YAFG;AAGHQ,IAAAA,SAAS,EAATA,SAHG;AAIHC,IAAAA,SAAS,EAATA;AAJG,GAAP;AAMH;;GAzCuBjB,O","sourcesContent":["import { useState,useEffect } from 'react';\n\nexport default function useForm(initial = {}) {\n    const [inputs, setInputs] = useState(initial);\n    const intialValue = Object.values(initial).join('');\n\n    useEffect(() => {\n        setInputs(initial)\n    }, [intialValue])\n\n    function handleChange(e) {\n        let { value, name, type } = e.target;\n        if (type === 'number') {\n            value = parseInt(value);\n        }\n        if (type === 'file') {\n            [value] = e.target.files;\n        }\n        setInputs({\n            // copy the existing state\n            ...inputs,\n            [name]: value,\n        });\n    }\n\n    function resetForm() {\n        setInputs(initial);\n    }\n\n    function clearForm() {\n        const blankState = Object.fromEntries(\n            Object.entries(inputs).map(([key, value]) => [key, ''])\n        );\n        setInputs(blankState);\n    }\n\n    // return the things we want to surface from this custom hook\n    return {\n        inputs,\n        handleChange,\n        resetForm,\n        clearForm,\n    };\n}"]},"metadata":{},"sourceType":"module"}