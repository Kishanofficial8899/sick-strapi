{"ast":null,"code":"import _regeneratorRuntime from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/requesrReset.js\",\n    _s = $RefreshSig$();\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nexport default function RequestReset() {\n  _s();\n\n  var _useForm = useForm({\n    email: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm; // const [signup, { data, loading, error }] = useMutation(\n  //     REQUEST_RESET_MUTATION,\n  //     {\n  //         variables: inputs,\n  //     }\n  // );\n\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // stop the form from submitting\n              // const res = await signup().catch(console.error);\n\n              resetForm(); // Send the email and password to the graphqlAPI\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestReset, \"TxPazxEW5CQe9Ln8vaiwbEx0U74=\", false, function () {\n  return [useForm];\n});\n\n_c = RequestReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/requesrReset.js"],"names":["gql","useMutation","Form","useForm","Error","RequestReset","email","inputs","handleChange","resetForm","handleSubmit","e","preventDefault"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAIA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA,iBACSF,OAAO,CAAC;AAChDG,IAAAA,KAAK,EAAE;AADyC,GAAD,CADhB;AAAA,MAC3BC,MAD2B,YAC3BA,MAD2B;AAAA,MACnBC,YADmB,YACnBA,YADmB;AAAA,MACLC,SADK,YACLA,SADK,EAIvC;AACI;AACA;AACA;AACA;AACA;;;AATmC,WAUpBC,YAVoB;AAAA;AAAA;;AAAA;AAAA,6EAUnC,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AACIA,cAAAA,CAAC,CAACC,cAAF,GADJ,CACwB;AACpB;;AACAH,cAAAA,SAAS,GAHb,CAII;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVmC;AAAA;AAAA;;AAgBnC,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEC,YAA9B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,8BAKI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,oBAHhB;AAII,UAAA,YAAY,EAAC,OAJjB;AAKI,UAAA,KAAK,EAAEH,MAAM,CAACD,KALlB;AAMI,UAAA,QAAQ,EAAEE;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAxCuBH,Y;UACwBF,O;;;KADxBE,Y","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\n\n\n\nexport default function RequestReset() {\n    const { inputs, handleChange, resetForm } = useForm({\n        email: '',\n    });\n// const [signup, { data, loading, error }] = useMutation(\n    //     REQUEST_RESET_MUTATION,\n    //     {\n    //         variables: inputs,\n    //     }\n    // );\n    async function handleSubmit(e) {\n        e.preventDefault(); // stop the form from submitting\n        // const res = await signup().catch(console.error);\n        resetForm();\n        // Send the email and password to the graphqlAPI\n    }\n    return (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n            <h2>Request a Password Reset</h2>\n            {/* <Error error={error} /> */}\n            <fieldset>\n                {/* {data?.sendUserPasswordResetLink === null && (\n                    <p>Success! Check your email for a link!</p>\n                )} */}\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Your Email Address\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Request Reset!</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}