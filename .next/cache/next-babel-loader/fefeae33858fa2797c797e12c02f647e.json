{"ast":null,"code":"import _regeneratorRuntime from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n        input: {\\n          where: { id: $id }\\n          data: { Name: $name, Price:$price,Descriptions:$description}\\n        }\\n    ) {\\n      product{\\n        Name\\n        Descriptions\\n        Price\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery SINGLE_ITEM_QUERY($id: ID!) {\\n   product(id:$id){\\n    Price,\\n    Name,\\n    Image{\\n        url,\\n        alternativeText\\n    },\\n    Descriptions\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    name: inputs.Name,\n                    description: inputs.Descriptions,\n                    price: inputs.Price\n                  }\n                })[\"catch\"](console.error);\n\n              case 3:\n                res = _context.sent;\n                clearForm();\n                console.log(res); // Submit the inputfields to the backend:\n                // TODO: Handle Submit!!!\n                // const res = await createProduct();\n                // clearForm();\n                // // Go to that product's page!\n                // Router.push({\n                //   pathname: `/product/${res.data.createProduct.id}`,\n                // });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"Name\",\n          placeholder: \"Name\",\n          value: inputs.Name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"Price\",\n          placeholder: \"price\",\n          value: inputs.Price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"Descriptions\",\n          placeholder: \"Description\",\n          value: inputs.Descriptions,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"KnKvASnoDcZ75Be8gZJRpraYSVg=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","ALL_PRODUCTS_QUERY","SINGLE_ITEM_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error","updateProduct","updateData","updateError","updateLoading","product","inputs","handleChange","clearForm","resetForm","e","preventDefault","name","Name","description","Descriptions","price","Price","console","res","log"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY} from './Products'\n\n\nconst SINGLE_ITEM_QUERY = gql`\nquery SINGLE_ITEM_QUERY($id: ID!) {\n   product(id:$id){\n    Price,\n    Name,\n    Image{\n        url,\n        alternativeText\n    },\n    Descriptions\n  }\n}\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n        input: {\n          where: { id: $id }\n          data: { Name: $name, Price:$price,Descriptions:$description}\n        }\n    ) {\n      product{\n        Name\n        Descriptions\n        Price\n      }\n    }\n  }\n`;\n\nexport default function UpdateProduct({ id }) {\n    const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n        variables: {\n            id,  \n        },\n    });\n    const [\n        updateProduct,\n        { data: updateData, error: updateError, loading: updateLoading },\n    ] = useMutation(UPDATE_PRODUCT_MUTATION);\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.product);\n    if (loading) return <p>loading...</p>;\n    return (\n        <Form\n            onSubmit={async (e) => {\n                e.preventDefault();\n                const res = await updateProduct({\n                    variables: {\n                        id,\n                        name: inputs.Name,\n                        description: inputs.Descriptions,\n                        price: inputs.Price,\n                    },\n                }).catch(console.error);\n                clearForm()\n                console.log(res);\n                // Submit the inputfields to the backend:\n                // TODO: Handle Submit!!!\n                // const res = await createProduct();\n                // clearForm();\n                // // Go to that product's page!\n                // Router.push({\n                //   pathname: `/product/${res.data.createProduct.id}`,\n                // });\n            }}\n        >\n            <DisplayError error={error || updateError} />\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n                <label htmlFor=\"name\">\n                    Name\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"Name\"\n                        placeholder=\"Name\"\n                        value={inputs.Name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"Price\"\n                        placeholder=\"price\"\n                        value={inputs.Price}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    Description\n                    <textarea\n                        id=\"description\"\n                        name=\"Descriptions\"\n                        placeholder=\"Description\"\n                        value={inputs.Descriptions}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <button type=\"submit\">Update Product</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}