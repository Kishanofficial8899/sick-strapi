{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/UpdateProduct.js\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nconst SINGLE_ITEM_QUERY = gql`\nquery SINGLE_ITEM_QUERY($id: ID!) {\n   product(id:$id){\n    Price,\n    Name,\n    Image{\n        url,\n        alternativeText\n    },\n    Descriptions\n  }\n}\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n        input: {\n          where: { id: $id }\n          data: { Name: $name, Price:$price,Descriptions:$description}\n        }\n    ) {\n      product{\n        Name\n        Descriptions\n        Price\n      }\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateProduct, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUER\n    }]\n  });\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.product);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateProduct({\n        variables: {\n          id,\n          name: inputs.Name,\n          description: inputs.Descriptions,\n          price: inputs.Price\n        }\n      }).catch(console.error);\n      clearForm();\n      console.log(res);\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"Name\",\n          placeholder: \"Name\",\n          value: inputs.Name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"Price\",\n          placeholder: \"price\",\n          value: inputs.Price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"Descriptions\",\n          placeholder: \"Description\",\n          value: inputs.Descriptions,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","ALL_PRODUCTS_QUERY","SINGLE_ITEM_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","loading","error","variables","updateProduct","updateData","updateError","updateLoading","refetchQueries","query","ALL_PRODUCTS_QUER","inputs","handleChange","clearForm","resetForm","product","e","preventDefault","res","name","Name","description","Descriptions","price","Price","catch","console","log"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport DisplayError from './ErrorMessage';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY} from './Products'\n\n\nconst SINGLE_ITEM_QUERY = gql`\nquery SINGLE_ITEM_QUERY($id: ID!) {\n   product(id:$id){\n    Price,\n    Name,\n    Image{\n        url,\n        alternativeText\n    },\n    Descriptions\n  }\n}\n`;\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n        input: {\n          where: { id: $id }\n          data: { Name: $name, Price:$price,Descriptions:$description}\n        }\n    ) {\n      product{\n        Name\n        Descriptions\n        Price\n      }\n    }\n  }\n`;\n\nexport default function UpdateProduct({id}) {\n    const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\n        variables: {\n             id,  \n        },\n    });\n    const [\n        updateProduct,\n        { data: updateData, error: updateError, loading: updateLoading },\n    ] = useMutation(UPDATE_PRODUCT_MUTATION, {\n        refetchQueries: [{ query: ALL_PRODUCTS_QUER }]\n    });\n    const { inputs, handleChange, clearForm, resetForm } = useForm(data?.product);\n    if (loading) return <p>loading...</p>;\n    return (\n        <Form\n            onSubmit={async (e) => {\n                e.preventDefault();\n                const res = await updateProduct({\n                    variables: {\n                        id,\n                        name: inputs.Name,\n                        description: inputs.Descriptions,\n                        price: inputs.Price,\n                    },\n                }).catch(console.error);\n                clearForm()\n                console.log(res);\n            }}\n        >\n            <DisplayError error={error || updateError} />\n            <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n                <label htmlFor=\"name\">\n                    Name\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"Name\"\n                        placeholder=\"Name\"\n                        value={inputs.Name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"Price\"\n                        placeholder=\"price\"\n                        value={inputs.Price}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    Description\n                    <textarea\n                        id=\"description\"\n                        name=\"Descriptions\"\n                        placeholder=\"Description\"\n                        value={inputs.Descriptions}\n                        onChange={handleChange}\n                    />\n                </label>\n\n                <button type=\"submit\">Update Product</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}