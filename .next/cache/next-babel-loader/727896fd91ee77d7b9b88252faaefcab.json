{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/DeleteProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\nimport gql from 'graphql-tag';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n     deleteProduct(input: { where: { id: $id } }) {\n        product {\n          Name\n          Price,\n          id\n        }\n      }\n  }\n`;\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteProduct.product));\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    },\n    update: update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm('Are you sure you want to delete this item?')) {\n        deleteProduct().catch(err => alert(err));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/DeleteProduct.js"],"names":["useMutation","resultKeyNameFromField","gql","ALL_PRODUCTS_QUERY","DELETE_PRODUCT_MUTATION","update","cache","payload","evict","identify","data","deleteProduct","product","DeleteProduct","id","children","loading","variables","confirm","catch","err","alert"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,kBAAR,QAAiC,YAAjC;AAEA,MAAMC,uBAAuB,GAAGF,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,SAASG,MAAT,CAAgBC,KAAhB,EAAsBC,OAAtB,EAA+B;AAC3BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,aAAb,CAA2BC,OAA1C,CAAZ;AACH;;AACD,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACpD,QAAM,CAACJ,aAAD,EAAgB;AAAEK,IAAAA;AAAF,GAAhB,IAA+BhB,WAAW,CAC5CI,uBAD4C,EAE5C;AACIa,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF,KADf;AAEIT,IAAAA,MAAM,EAAEA;AAFZ,GAF4C,CAAhD;AAOA,sBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,EAAEW,OAFd;AAGI,IAAA,OAAO,EAAE,MAAM;AACX,UAAIE,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACvDP,QAAAA,aAAa,GAAGQ,KAAhB,CAAuBC,GAAD,IAASC,KAAK,CAACD,GAAD,CAApC;AACH;AACJ,KAPL;AAAA,cASKL;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\nimport gql from 'graphql-tag'; \nimport {ALL_PRODUCTS_QUERY} from './Products'\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n     deleteProduct(input: { where: { id: $id } }) {\n        product {\n          Name\n          Price,\n          id\n        }\n      }\n  }\n`;\n\nfunction update(cache,payload) {\n    cache.evict(cache.identify(payload.data.deleteProduct.product));\n}\nexport default function DeleteProduct({ id, children }) {\n    const [deleteProduct, { loading }] = useMutation(\n        DELETE_PRODUCT_MUTATION,\n        {\n            variables: { id },\n            update: update\n        }\n    );\n    return (\n        <button\n            type=\"button\"\n            disabled={loading}\n            onClick={() => {\n                if (confirm('Are you sure you want to delete this item?')) {\n                    deleteProduct().catch((err) => alert(err));\n                }\n            }}\n        >\n            {children}\n        </button>\n    );\n}"]},"metadata":{},"sourceType":"module"}