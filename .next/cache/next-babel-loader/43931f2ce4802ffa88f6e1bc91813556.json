{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/resetPasswordRequest.js\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $password: String!\n    $passwordConfirmation: String!\n    $code:$String\n  ) {\n    jwt,\n    user {\n        email\n    }\n  }\n`;\nexport default function ResetPassword({\n  code\n}) {\n  console.log(code);\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    password: '',\n    passwordConfirmation: '',\n    code: code\n  });\n  const [resetPassword, {\n    data,\n    loading,\n    error\n  }] = useMutation(RESET_MUTATION, {\n    variables: inputs\n  });\n  console.log(error);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await resetPassword().catch(console.error);\n    resetForm();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! You can Now sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"ConfirmationPassword\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"passwordConfirmation\",\n          placeholder: \"Password\",\n          autoComplete: \"passwordConfirmation\",\n          value: inputs.passwordConfirmation,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/resetPasswordRequest.js"],"names":["gql","useMutation","Form","useForm","Error","RESET_MUTATION","ResetPassword","code","console","log","inputs","handleChange","resetForm","password","passwordConfirmation","resetPassword","data","loading","error","variables","handleSubmit","e","preventDefault","res","catch","redeemUserPasswordResetToken"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,cAAc,GAAGL,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,eAAe,SAASM,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAiC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCT,OAAO,CAAC;AAChDU,IAAAA,QAAQ,EAAE,EADsC;AAEhDC,IAAAA,oBAAoB,EAAE,EAF0B;AAGhDP,IAAAA,IAAI,EAACA;AAH2C,GAAD,CAAnD;AAKA,QAAM,CAACQ,aAAD,EAAgB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAhB,IAA4CjB,WAAW,CAACI,cAAD,EAAiB;AAC1Ec,IAAAA,SAAS,EAAET;AAD+D,GAAjB,CAA7D;AAIAF,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,iBAAeE,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMR,aAAa,GAAGS,KAAhB,CAAsBhB,OAAO,CAACU,KAA9B,CAAlB;AACAN,IAAAA,SAAS;AACZ;;AACD,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEQ,YAA9B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iBACK,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,4BAAN,MAAuC,IAAvC,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAII;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,YAAY,EAAC,UAJjB;AAKI,UAAA,KAAK,EAAEf,MAAM,CAACG,QALlB;AAMI,UAAA,QAAQ,EAAEF;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAeI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,wDAEI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,sBAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,YAAY,EAAC,sBAJjB;AAKI,UAAA,KAAK,EAAED,MAAM,CAACI,oBALlB;AAMI,UAAA,QAAQ,EAAEH;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eA0BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $password: String!\n    $passwordConfirmation: String!\n    $code:$String\n  ) {\n    jwt,\n    user {\n        email\n    }\n  }\n`;\n\nexport default function ResetPassword({ code }) {\n    console.log(code)\n    const { inputs, handleChange, resetForm } = useForm({\n        password: '',\n        passwordConfirmation: '',\n        code:code,\n    });\n    const [resetPassword, { data, loading, error }] = useMutation(RESET_MUTATION, {\n        variables: inputs,\n    }); \n\n    console.log(error);\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const res = await resetPassword().catch(console.error);\n        resetForm();\n    }\n    return (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n            <h2>Reset Your Password</h2>\n            <Error error={error} />\n            <fieldset>\n                {data?.redeemUserPasswordResetToken === null && (\n                    <p>Success! You can Now sign in</p>\n                )}\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    ConfirmationPassword\n                    <input\n                        type=\"password\"\n                        name=\"passwordConfirmation\"\n                        placeholder=\"Password\"\n                        autoComplete=\"passwordConfirmation\"\n                        value={inputs.passwordConfirmation}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Request Reset!</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}