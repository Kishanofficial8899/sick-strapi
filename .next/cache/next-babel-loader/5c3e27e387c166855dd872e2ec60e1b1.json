{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useRouter } from 'next/dist/client/router';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n searchTerms: products(where:{Name_contains:$searchTerm}){\n    Name,\n    id,\n    Price,\n    Image{\n      url,\n      alternativeText\n     }\n    }\n  }\n`;\nexport default function Search() {\n  const router = useRouter();\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    isOpen,\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n    highlightedIndex\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange({\n      selectedItem\n    }) {\n      router.push({\n        pathname: `/product/${selectedItem.id}`\n      });\n    },\n\n    itemToString: item => (item === null || item === void 0 ? void 0 : item.Name) || ''\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an Item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && items.map((item, index) => /*#__PURE__*/_createElement(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item,\n        index\n      })), {}, {\n        key: item.id,\n        highlighted: index === highlightedIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        },\n        __self: this\n      }), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item === null || item === void 0 ? void 0 : item.Image[0].url,\n        alt: item === null || item === void 0 ? void 0 : item.Image[0].alternativeText,\n        width: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this), item.Name)), isOpen && !items.length && !loading && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [\"Sorry, No items found for \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","useRouter","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","router","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","isOpen","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","highlightedIndex","onInputValueChange","variables","searchTerm","onSelectedItemChange","selectedItem","push","pathname","id","itemToString","item","Name","type","placeholder","className","map","index","Image","url","alternativeText","length"],"mappings":"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","sourcesContent":["import { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useRouter } from 'next/dist/client/router';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n searchTerms: products(where:{Name_contains:$searchTerm}){\n    Name,\n    id,\n    Price,\n    Image{\n      url,\n      alternativeText\n     }\n    }\n  }\n`;\n\nexport default function Search() {\n    const router = useRouter();\n    const [findItems, { loading, data, error }] = useLazyQuery(\n        SEARCH_PRODUCTS_QUERY,\n        {\n            fetchPolicy: 'no-cache',\n        }\n    );\n    const items = data?.searchTerms || [];\n    const findItemsButChill = debounce(findItems, 350);\n    \n    resetIdCounter();\n    const {\n        isOpen,\n        inputValue,\n        getMenuProps,\n        getInputProps,\n        getComboboxProps,\n        getItemProps,\n        highlightedIndex,\n    } = useCombobox({\n        items,\n        onInputValueChange() {\n            findItemsButChill({\n                variables: {\n                    searchTerm: inputValue,\n                },\n            });\n        },\n        onSelectedItemChange({ selectedItem }) {\n            router.push({\n                pathname: `/product/${selectedItem.id}`,\n            });\n        },\n        itemToString: (item) => item?.Name || '',\n    });\n    return (\n        <SearchStyles>\n            <div {...getComboboxProps()}>\n                <input\n                    {...getInputProps({\n                        type: 'search',\n                        placeholder: 'Search for an Item',\n                        id: 'search',\n                        className: loading ? 'loading' : '',\n                    })}\n                />\n            </div>\n            <DropDown {...getMenuProps()}>\n                {isOpen &&\n                    items.map((item, index) => (\n                        <DropDownItem\n                            {...getItemProps({ item, index })}\n                            key={item.id}\n                            highlighted={index === highlightedIndex}\n                        >\n                            <img\n                                src={item?.Image[0].url}\n                                alt={item?.Image[0].alternativeText}\n                                width=\"50\"\n                            />\n                            {item.Name}\n                        </DropDownItem>\n                    ))}\n                {isOpen && !items.length && !loading && (\n                    <DropDownItem>Sorry, No items found for {inputValue}</DropDownItem>\n                )}\n            </DropDown>\n        </SearchStyles>\n    );\n}"]},"metadata":{},"sourceType":"module"}