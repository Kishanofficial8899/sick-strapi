{"ast":null,"code":"import _regeneratorRuntime from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/resetPasswordRequest.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION($password: String!,$passwordConfirmation: String!,$code:String!) {\\n     resetPassword(password:$password,passwordConfirmation:$passwordConfirmation,code:$code){\\n      jwt,\\n      user{\\n        username\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nimport { useState } from 'react';\nvar RESET_MUTATION = gql(_templateObject());\nexport default function ResetPassword(_ref) {\n  _s();\n\n  var code = _ref.code;\n\n  var _useForm = useForm({\n    password: '',\n    passwordConfirmation: '',\n    code: code\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useState = useState(false),\n      validationError = _useState[0],\n      setValidationError = _useState[1];\n\n  var _useMutation = useMutation(RESET_MUTATION, {\n    variables: inputs\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (inputs.password !== inputs.passwordConfirmation) {\n                setValidationError(\"password is Missmatch\");\n              }\n\n              e.preventDefault();\n              _context.next = 4;\n              return resetPassword()[\"catch\"](console.error);\n\n            case 4:\n              resetForm();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! You can Now sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"ConfirmationPassword\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"passwordConfirmation\",\n          placeholder: \"Password\",\n          autoComplete: \"passwordConfirmation\",\n          value: inputs.passwordConfirmation,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"lvVAgsuHPST8DzIM1cajJQYXZRw=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/resetPasswordRequest.js"],"names":["gql","useMutation","Form","useForm","Error","useState","RESET_MUTATION","ResetPassword","code","password","passwordConfirmation","inputs","handleChange","resetForm","validationError","setValidationError","variables","resetPassword","data","loading","error","handleSubmit","e","preventDefault","console","redeemUserPasswordResetToken"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nimport { useState } from 'react';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION($password: String!,$passwordConfirmation: String!,$code:String!) {\n     resetPassword(password:$password,passwordConfirmation:$passwordConfirmation,code:$code){\n      jwt,\n      user{\n        username\n      }\n    }\n  }\n`;\n\nexport default function ResetPassword({ code }) {\n    const { inputs, handleChange, resetForm } = useForm({\n        password: '',\n        passwordConfirmation: '',\n        code,\n    });\n    const [validationError, setValidationError] = useState(false);\n    const [resetPassword, { data, loading, error }] = useMutation(RESET_MUTATION, {\n        variables: inputs,\n    }); \n\n    async function handleSubmit(e) {\n        if (inputs.password !== inputs.passwordConfirmation) {\n            setValidationError(\"password is Missmatch\")\n        }\n        e.preventDefault();\n        await resetPassword().catch(console.error);\n        resetForm();\n    }\n    return (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n            <h2>Reset Your Password</h2>\n            <Error error={error} />\n            <fieldset>\n                {data?.redeemUserPasswordResetToken === null && (\n                    <p>Success! You can Now sign in</p>\n                )}\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    ConfirmationPassword\n                    <input\n                        type=\"password\"\n                        name=\"passwordConfirmation\"\n                        placeholder=\"Password\"\n                        autoComplete=\"passwordConfirmation\"\n                        value={inputs.passwordConfirmation}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Request Reset!</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}