{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/requesrReset.js\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\nconst FORGOT_PASSWORD = gql`\n  mutation UPDATE_PRODUCT_MUTATION($email: String!) {\n     forgotPassword(email:$email){\n        ok\n     }\n  }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: ''\n  });\n  const [forgotPassword, {\n    data,\n    loading,\n    error\n  }] = useMutation(FORGOT_PASSWORD, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n\n    await forgotPassword().catch(console.error);\n    resetForm();\n  }\n\n  console.log(\">>>Check\", data);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/requesrReset.js"],"names":["gql","useMutation","Form","useForm","Error","FORGOT_PASSWORD","RequestReset","inputs","handleChange","resetForm","email","forgotPassword","data","loading","error","variables","handleSubmit","e","preventDefault","catch","console","log"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,eAAe,GAAGL,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe,SAASM,YAAT,GAAwB;AACnC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCN,OAAO,CAAC;AAChDO,IAAAA,KAAK,EAAE;AADyC,GAAD,CAAnD;AAGA,QAAM,CAACC,cAAD,EAAiB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAgBC,IAAAA;AAAhB,GAAjB,IAA2Cb,WAAW,CACxDI,eADwD,EAExD;AACIU,IAAAA,SAAS,EAAER;AADf,GAFwD,CAA5D;;AAMA,iBAAeS,YAAf,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CACP;;AACnB,UAAMP,cAAc,GAAGQ,KAAjB,CAAuBC,OAAO,CAACN,KAA/B,CAAN;AACDL,IAAAA,SAAS;AACZ;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBT,IAAvB;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEI,YAA9B;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,8BAKI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,oBAHhB;AAII,UAAA,YAAY,EAAC,OAJjB;AAKI,UAAA,KAAK,EAAEP,MAAM,CAACG,KALlB;AAMI,UAAA,QAAQ,EAAEF;AANd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport Error from './ErrorMessage';\n\nconst FORGOT_PASSWORD = gql`\n  mutation UPDATE_PRODUCT_MUTATION($email: String!) {\n     forgotPassword(email:$email){\n        ok\n     }\n  }\n`;\n\nexport default function RequestReset() {\n    const { inputs, handleChange, resetForm } = useForm({\n        email: '',\n    });\n    const [forgotPassword, { data, loading,error}] = useMutation(\n        FORGOT_PASSWORD,\n        {\n            variables: inputs,\n        }\n    );\n    async function handleSubmit(e) {\n        e.preventDefault(); // stop the form from submitting\n         await forgotPassword().catch(console.error);\n        resetForm();\n    }\n    console.log(\">>>Check\",data)\n    return (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n            <h2>Request a Password Reset</h2>\n            <Error error={error} />\n            <fieldset>\n                {/* {data?.sendUserPasswordResetLink === null && (\n                    <p>Success! Check your email for a link!</p>\n                )} */}\n\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Your Email Address\"\n                        autoComplete=\"email\"\n                        value={inputs.email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Request Reset!</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}