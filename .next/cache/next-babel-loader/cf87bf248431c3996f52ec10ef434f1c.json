{"ast":null,"code":"import _slicedToArray from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/DeleteProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\\n     deleteProduct(input: { where: { id: $id } }) {\\n        product {\\n          Name\\n          Price,\\n          id\\n        }\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\nimport gql from 'graphql-tag';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteProduct.product));\n}\n\nexport default function DeleteProduct(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Are you sure you want to delete this item?')) {\n        deleteProduct()[\"catch\"](function (err) {\n          return alert(err);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeleteProduct, \"MAc2BuRR5i/aF3CQ0o0/sj++Nvs=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/DeleteProduct.js"],"names":["useMutation","resultKeyNameFromField","gql","ALL_PRODUCTS_QUERY","DELETE_PRODUCT_MUTATION","update","cache","payload","evict","identify","data","deleteProduct","product","DeleteProduct","id","children","variables","loading","confirm","err","alert"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,kBAAR,QAAiC,YAAjC;AAEA,IAAMC,uBAAuB,GAAGF,GAAH,mBAA7B;;AAYA,SAASG,MAAT,CAAgBC,KAAhB,EAAsBC,OAAtB,EAA+B;AAC3BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,aAAb,CAA2BC,OAA1C,CAAZ;AACH;;AACD,eAAe,SAASC,aAAT,OAAyC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,qBACff,WAAW,CAC5CI,uBAD4C,EAE5C;AACIY,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADf;AAEIT,IAAAA,MAAM,EAAEA;AAFZ,GAF4C,CADI;AAAA;AAAA,MAC7CM,aAD6C;AAAA,MAC5BM,OAD4B,oBAC5BA,OAD4B;;AAQpD,sBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,EAAEA,OAFd;AAGI,IAAA,OAAO,EAAE,mBAAM;AACX,UAAIC,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACvDP,QAAAA,aAAa,WAAb,CAAsB,UAACQ,GAAD;AAAA,iBAASC,KAAK,CAACD,GAAD,CAAd;AAAA,SAAtB;AACH;AACJ,KAPL;AAAA,cASKJ;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArBuBF,a;UACiBb,W;;;KADjBa,a","sourcesContent":["import { useMutation } from '@apollo/client';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\nimport gql from 'graphql-tag'; \nimport {ALL_PRODUCTS_QUERY} from './Products'\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n     deleteProduct(input: { where: { id: $id } }) {\n        product {\n          Name\n          Price,\n          id\n        }\n      }\n  }\n`;\n\nfunction update(cache,payload) {\n    cache.evict(cache.identify(payload.data.deleteProduct.product));\n}\nexport default function DeleteProduct({ id, children }) {\n    const [deleteProduct, { loading }] = useMutation(\n        DELETE_PRODUCT_MUTATION,\n        {\n            variables: { id },\n            update: update\n        }\n    );\n    return (\n        <button\n            type=\"button\"\n            disabled={loading}\n            onClick={() => {\n                if (confirm('Are you sure you want to delete this item?')) {\n                    deleteProduct().catch((err) => alert(err));\n                }\n            }}\n        >\n            {children}\n        </button>\n    );\n}"]},"metadata":{},"sourceType":"module"}