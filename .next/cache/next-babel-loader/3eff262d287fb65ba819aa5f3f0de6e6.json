{"ast":null,"code":"import _regeneratorRuntime from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($identifier: String!, $password: String!) {\\n      login(input: { identifier: $identifier, password: $password }) {\\n         user{\\n          id\\n        }\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nimport { da } from 'date-fns/locale';\nvar SIGNIN_MUTATION = gql(_templateObject());\nexport default function SignIn() {\n  _s();\n\n  var _useForm = useForm({\n    identifier: '',\n    password: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: {\n      identifier: inputs.identifier,\n      password: inputs.password\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  console.log(data);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // stop the form from submitting\n\n              _context.next = 3;\n              return login();\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              resetForm();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"identifier\",\n          name: \"identifier\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"identifier\",\n          value: inputs.identifier,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignIn, \"iDJlLzHvWpN7bCKk/NpusGETXFI=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/bytes-kishan/Desktop/Kishan/strapi/frontend/components/SignIn.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","da","SIGNIN_MUTATION","SignIn","identifier","password","inputs","handleChange","resetForm","variables","refetchQueries","query","login","data","loading","error","console","log","handleSubmit","e","preventDefault","res"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage'\nimport { da } from 'date-fns/locale';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($identifier: String!, $password: String!) {\n      login(input: { identifier: $identifier, password: $password }) {\n         user{\n          id\n        }\n      }\n  }\n`;\n\nexport default function SignIn() {\n    const { inputs, handleChange, resetForm } = useForm({\n        identifier: '',\n        password: '',\n    });\n    \n    const [login, { data, loading,error}] = useMutation(SIGNIN_MUTATION, {\n        variables: {\n            identifier: inputs.identifier,\n            password: inputs.password\n        },\n        refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    });\n    console.log(data)\n    async function handleSubmit(e) {\n        e.preventDefault(); // stop the form from submitting\n        const res = await login();\n        console.log(res);\n        resetForm();\n    }\n    return (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n            <h2>Sign Into Your Account</h2>\n            <Error error={error} />\n            <fieldset>\n                <label htmlFor=\"email\">\n                    Email\n                    <input\n                        type=\"identifier\"\n                        name=\"identifier\"\n                        placeholder=\"Your Email Address\"\n                        autoComplete=\"identifier\"\n                        value={inputs.identifier}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"password\"\n                        value={inputs.password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button type=\"submit\">Sign In!</button>\n            </fieldset>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}